--- gcc-2.95.2/gcc/config/alpha/alpha.c.jg-orig	Thu Nov  8 18:51:27 2001
+++ gcc-2.95.2/gcc/config/alpha/alpha.c	Thu Nov  8 18:59:51 2001
@@ -708,10 +708,24 @@
      rtx op;
      enum machine_mode mode ATTRIBUTE_UNUSED;
 {
-  return (GET_CODE (op) == SYMBOL_REF
-	  && ! profile_flag && ! profile_block_flag
-	  && (SYMBOL_REF_FLAG (op)
-	      || op == XEXP (DECL_RTL (current_function_decl), 0)));
+    if (GET_CODE (op) != SYMBOL_REF)
+      return 0;
+  
+    if (profile_flag || profile_block_flag)
+      return 0;
+  
+   /* Easy test for recursion.  */
+   if (op == XEXP (DECL_RTL (current_function_decl), 0))
+     return 1;
+  
+   /* Otherwise, we need the DECL for the SYMBOL_REF, which we can't get.
+      So SYMBOL_REF_FLAG has been declared to imply that the function is
+      in the default text section.  So we must also check that the current
+      function is also in the text section.  */
+   if (SYMBOL_REF_FLAG (op) && in_text_section ())
+     return 1;
+ 
+   return 0;
 }
 
 /* Return 1 if OP is a valid operand for the MEM of a CALL insn.  */
@@ -4948,9 +4962,10 @@
      shared library because the function may be overridden by the application
      or other libraries.  Similarly, don't do this for weak functions.  */
 
-  if (!DECL_WEAK (current_function_decl)
-      && (!flag_pic || !TREE_PUBLIC (current_function_decl)))
-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (current_function_decl), 0)) = 1;
+   if (!DECL_WEAK (current_function_decl)
+       && (!flag_pic || !TREE_PUBLIC (current_function_decl))
+       && in_text_section ())
+     SYMBOL_REF_FLAG (XEXP (DECL_RTL (current_function_decl), 0)) = 1;
 }
 
 /* Debugging support.  */
--- gcc-2.95.2/gcc/config/alpha/alpha.h.jg-orig	Thu Nov  8 20:10:07 2001
+++ gcc-2.95.2/gcc/config/alpha/alpha.h	Thu Nov  8 20:11:19 2001
@@ -1994,7 +1994,8 @@
 
 #define ENCODE_SECTION_INFO(DECL)  \
   if (TREE_CODE (DECL) == FUNCTION_DECL && ! TREE_PUBLIC (DECL)) \
-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;
+    { if (!in_text_section()) \
+    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1; }
 
 /* How to refer to registers in assembler output.
    This sequence is indexed by compiler's hard-register-number (see above).  */
