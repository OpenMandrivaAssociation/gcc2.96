--- libjava/configure.in.jj	Wed May 24 08:15:49 2000
+++ libjava/configure.in	Fri Mar 15 00:07:53 2002
@@ -216,7 +216,7 @@ case "$GC" in
     # We include the path to the boehm-gc build directory.
     # See Makefile.am to understand why.
     GCLIBS="$GCDEPS -L\$(here)/../boehm-gc/$libsubdir"
-    GCINCS='-I$(top_srcdir)/../boehm-gc -I$(top_builddir)/../boehm-gc'
+    GCINCS='-I$(top_srcdir)/../boehm-gc/include -I$(top_builddir)/../boehm-gc'
     GCSPEC='-lgcjgc'
     GCTESTSPEC="-L`pwd`/../boehm-gc/.libs -rpath `pwd`/../boehm-gc/.libs"
     dnl We also want to pick up some cpp flags required when including
--- libjava/configure.jj	Wed May 24 08:15:49 2000
+++ libjava/configure	Fri Mar 15 00:08:07 2002
@@ -2448,7 +2448,7 @@ case "$GC" in
     # We include the path to the boehm-gc build directory.
     # See Makefile.am to understand why.
     GCLIBS="$GCDEPS -L\$(here)/../boehm-gc/$libsubdir"
-    GCINCS='-I$(top_srcdir)/../boehm-gc -I$(top_builddir)/../boehm-gc'
+    GCINCS='-I$(top_srcdir)/../boehm-gc/include -I$(top_builddir)/../boehm-gc'
     GCSPEC='-lgcjgc'
     GCTESTSPEC="-L`pwd`/../boehm-gc/.libs -rpath `pwd`/../boehm-gc/.libs"
             GCINCS="$GCINCS `cat ../boehm-gc/boehm-cflags`"
--- libjava/libltdl/configure.in.jj	Mon Feb 14 22:59:58 2000
+++ libjava/libltdl/configure.in	Fri Mar 15 00:14:08 2002
@@ -37,7 +37,7 @@ changequote([,])
 
 GCINCS=
 if test "$GC" = "boehm"; then
-   GCINCS='-I$(top_srcdir)/../../boehm-gc -I$(top_builddir)/../../boehm-gc'
+   GCINCS='-I$(top_srcdir)/../../boehm-gc/include -I$(top_builddir)/../../boehm-gc'
    GCINCS="$GCINCS `cat ../../boehm-gc/boehm-cflags`"
    AC_DEFINE(HAVE_BOEHM_GC)
 fi
--- libjava/libltdl/configure.jj	Mon Feb 14 22:59:58 2000
+++ libjava/libltdl/configure	Fri Mar 15 00:14:20 2002
@@ -1648,7 +1648,7 @@ fi
 
 GCINCS=
 if test "$GC" = "boehm"; then
-   GCINCS='-I$(top_srcdir)/../../boehm-gc -I$(top_builddir)/../../boehm-gc'
+   GCINCS='-I$(top_srcdir)/../../boehm-gc/include -I$(top_builddir)/../../boehm-gc'
    GCINCS="$GCINCS `cat ../../boehm-gc/boehm-cflags`"
    cat >> confdefs.h <<\EOF
 #define HAVE_BOEHM_GC 1
--- libjava/posix-threads.cc.jj	Sun Apr  9 07:41:56 2000
+++ libjava/posix-threads.cc	Fri Mar 15 00:46:53 2002
@@ -18,7 +18,7 @@ details.  */
 #ifdef HAVE_BOEHM_GC
 extern "C"
 {
-#include <gcconfig.h>
+#include <private/gcconfig.h>
 #include <gc.h>
 };
 #endif /* HAVE_BOEHM_GC */
--- libjava/boehm.cc.jj	Mon May 15 10:38:36 2000
+++ libjava/boehm.cc	Fri Mar 15 00:47:29 2002
@@ -26,8 +26,8 @@ details.  */
 
 extern "C"
 {
-#include <gc_priv.h>
-#include <gc_mark.h>
+#include <private/gc_priv.h>
+#include <private/gc_pmark.h>
 
   // These aren't declared in any Boehm GC header.
   void GC_finalize_all (void);
@@ -433,12 +432,12 @@ _Jv_InitGC (void)
   memset (obj_free_list, 0, (MAXOBJSZ + 1) * sizeof (ptr_t));
 
   proc = GC_n_mark_procs++;
-  GC_mark_procs[proc] = (mark_proc) _Jv_MarkObj;
+  GC_mark_procs[proc] = (GC_mark_proc) _Jv_MarkObj;
 
   obj_kind_x = GC_n_kinds++;
   GC_obj_kinds[obj_kind_x].ok_freelist = obj_free_list;
   GC_obj_kinds[obj_kind_x].ok_reclaim_list = 0;
-  GC_obj_kinds[obj_kind_x].ok_descriptor = MAKE_PROC (proc, 0);
+  GC_obj_kinds[obj_kind_x].ok_descriptor = GC_MAKE_PROC (proc, 0);
   GC_obj_kinds[obj_kind_x].ok_relocate_descr = FALSE;
   GC_obj_kinds[obj_kind_x].ok_init = TRUE;
 
@@ -450,12 +449,12 @@ _Jv_InitGC (void)
   memset (array_free_list, 0, (MAXOBJSZ + 1) * sizeof (ptr_t));
 
   proc = GC_n_mark_procs++;
-  GC_mark_procs[proc] = (mark_proc) _Jv_MarkArray;
+  GC_mark_procs[proc] = (GC_mark_proc) _Jv_MarkArray;
 
   array_kind_x = GC_n_kinds++;
   GC_obj_kinds[array_kind_x].ok_freelist = array_free_list;
   GC_obj_kinds[array_kind_x].ok_reclaim_list = 0;
-  GC_obj_kinds[array_kind_x].ok_descriptor = MAKE_PROC (proc, 0);
+  GC_obj_kinds[array_kind_x].ok_descriptor = GC_MAKE_PROC (proc, 0);
   GC_obj_kinds[array_kind_x].ok_relocate_descr = FALSE;
   GC_obj_kinds[array_kind_x].ok_init = TRUE;
 
